<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MyShop.Views.Pages"
      xmlns:userctr="clr-namespace:MyShop.Views.Controls"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      x:Class="MyShop.Views.Pages.Orders"
      mc:Ignorable="d" 
      xmlns:converters="clr-namespace:MyShop.Converters"
      Loaded="Page_Loaded"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Product">

    <Page.Resources>
        <converters:OrderStatusConverter x:Key="orderStatusConverter"/>
        <converters:VisibilityCoverter x:Key="visibilityCoverter"/>
        <converters:PriceConverter x:Key="priceConverter"/>
        <converters:RelativeToAbsolutePathConverter x:Key="absoluteConverter"/>
        <Style TargetType="DataGridColumnHeader" x:Key="ActiveCellStyle">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="15"/>

        </Style>
        <Style x:Key="MyDataGridRow" TargetType="DataGridRow">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
            <Setter Property="IsHitTestVisible" Value="True" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="IsSelected" Value="False" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Background" Value="{DynamicResource ThirdBackgroundColor}"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                    </MultiTrigger.Setters>
                </MultiTrigger>

            </Style.Triggers>
        </Style>
        <Style x:Key="MyDataGridCell" TargetType="DataGridCell"  BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>

            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>
    <Border CornerRadius="5" Background="{DynamicResource SecundaryBackgroundColor}" >
        <DockPanel>
            <StackPanel DockPanel.Dock="Top" Margin="0 20 0 0" >

                <DockPanel 
                    HorizontalAlignment="Stretch" 
                    Margin="20 0 20 0">
                    <StackPanel 
                        Orientation="Horizontal"
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Left">
                        <CheckBox
                            Name="InProgressFilter"
                            Click="InProgressFilter_Click"
                            Style="{StaticResource MaterialDesignFilterChipPrimaryCheckBox}"
                            IsChecked="False"
                            Content="{DynamicResource UncompletedOrder}" />
                        <CheckBox
                            Click="CheckBox_Click"
                            Style="{StaticResource MaterialDesignFilterChipPrimaryCheckBox}"
                            IsChecked="False"
                            Content="{DynamicResource Filterbydate}" />
                        <StackPanel 
                            Visibility="{Binding FilterCheck, Converter={StaticResource visibilityCoverter}}"
                            Orientation="Horizontal" Margin="0 0 0 10">
                            <DatePicker
                                Name="preDate"
                                SelectedDateChanged="preDate_SelectedDateChanged"
                                SelectedDate="{Binding PreDate}"
                                Margin="10 0 0 0"
                                Foreground="{DynamicResource PrimaryTextColor}"
                                Background="Transparent"
                                Width="140"
                                materialDesign:HintAssist.Hint="{DynamicResource From}"
                                Style="{StaticResource MaterialDesignFilledDatePicker}" />
                            <DatePicker
                                Name="lastDate"
                                SelectedDateChanged="lastDate_SelectedDateChanged"
                                SelectedDate="{Binding LastDate}"
                                Margin="30 0 0 0"
                                Foreground="{DynamicResource PrimaryTextColor}"
                                Background="Transparent"
                                Width="140"
                                materialDesign:HintAssist.Hint="{DynamicResource To}"
                                Style="{StaticResource MaterialDesignFilledDatePicker}" />
                        </StackPanel>
                    </StackPanel>

                    <StackPanel 
                        Orientation="Horizontal"
                        DockPanel.Dock="Right"
                        HorizontalAlignment="Right">

                        <Button
                            Click="editBtn_Click"
                            Name="editBtn"
                            Margin="0 0 10 0"
                            Width="35"
                            Padding="0"
                            Style="{StaticResource MaterialDesignRaisedDarkButton}"
                            Height="30"
                            materialDesign:ButtonAssist.CornerRadius="5"
                            ToolTip="MaterialDesignRaisedDarkButton with Round Corners"
                            IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="EyeOutline" VerticalAlignment="Center" Height="20" Width="20" />

                            </StackPanel>
                        </Button>
                        <Button
                            Background="#FFF44336"
                            Click="deleteBtn_Click"
                            Name="deleteBtn"
                            Style="{StaticResource MaterialDesignRaisedDarkButton}"
                            Height="30"
                            Width="35"
                            Padding="0 0 0 0"
                            materialDesign:ButtonAssist.CornerRadius="5"
                            ToolTip="MaterialDesignRaisedDarkButton with Round Corners"
                            IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="TrashOutline" VerticalAlignment="Center" Height="20" Width="20" />

                            </StackPanel>
                        </Button>
                    </StackPanel>

                </DockPanel>
            </StackPanel>
            <Canvas Panel.ZIndex="10" DockPanel.Dock="Bottom" HorizontalAlignment="Right">
                <Button
                    x:Name="addBtn"
                    Click="addBtn_Click"
                    Style="{StaticResource MaterialDesignFloatingActionButton}" Canvas.Left="-64" Canvas.Top="-65" >
                    <materialDesign:PackIcon Kind="Plus" Width="24" Height="24"/>
                </Button>

            </Canvas>
            <Canvas DockPanel.Dock="Bottom" HorizontalAlignment="Center">
                <StackPanel Orientation="Horizontal" Canvas.Top="-30" Visibility="{Binding IsNotEmpty, Converter={StaticResource visibilityCoverter}}" >
                    <Button 
                        Foreground="{DynamicResource PrimaryTextColor}"
                        Name="Pre"
                        Click="Pre_Click"
                        Margin="0 0 10 0" 
                        Height="30" Padding="0" 
                        Background="Transparent" BorderBrush="Transparent">
                        <materialDesign:PackIcon Kind="ArrowLeftDropCircle" Width="25" Height="25" />
                    </Button>
                    <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource PrimaryTextColor}" Text="{Binding CurrentPage}"/>
                    <TextBlock VerticalAlignment="Center"  Foreground="{DynamicResource PrimaryTextColor}" Text="/"/>
                    <TextBlock  VerticalAlignment="Center" Foreground="{DynamicResource PrimaryTextColor}" Text="{Binding TotalPage}"/>
                    <Button 
                        Foreground="{DynamicResource PrimaryTextColor}"
                        Name="Next"
                        Click="Next_Click"
                        Margin="10 0 0 0" 
                        Height="30" Padding="0" 
                        Background="Transparent" BorderBrush="Transparent">
                        <materialDesign:PackIcon Kind="ArrowRightDropCircle" Width="25" Height="25"/>
                    </Button>
                </StackPanel>
            </Canvas>
            <Border Margin="20 10 20 30" >


                <Border >

                    <DataGrid
                        Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=ActualHeight}"
                        Name="myTable"
                        CellStyle="{StaticResource MyDataGridCell}"
                        RowStyle="{StaticResource MyDataGridRow}"
                        Background="{DynamicResource SecundaryBackgroundColor}"
                        IsReadOnly ="True"
                        ColumnHeaderStyle="{StaticResource ActiveCellStyle}"
                        SelectionUnit="FullRow"
                        SelectionMode="Single"
                        CanUserSortColumns="True"
                        CanUserAddRows="False"
                        ColumnWidth="*"
                        AutoGenerateColumns="False"
                        HeadersVisibility="All">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{DynamicResource Edit}" Name="editMenuItem" Click="editBtn_Click"/>
                                <MenuItem Header="{DynamicResource Remove}" Name="removeMenuItem" Click="deleteBtn_Click"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Resources>

                            <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                                            <Border Background="{DynamicResource PrimaryBackgroundColor}" CornerRadius="5"  Opacity="0.96">
                                                <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" Margin="5,4,5,4"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="{DynamicResource OrderId}" Width="0.7*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel HorizontalAlignment="Center">
                                            <TextBlock Text="{Binding OrderId}"/>
                                        </StackPanel>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="{DynamicResource Products}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel HorizontalAlignment="Center">
                                            <TextBlock Text="{Binding ProductsToString}"/>
                                        </StackPanel>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="{DynamicResource TotalProducts}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel HorizontalAlignment="Center">
                                            <TextBlock Text="{Binding OrderTotalProduct}"/>
                                        </StackPanel>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="{DynamicResource TotalPrice}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel HorizontalAlignment="Center">
                                            <TextBlock Text="{Binding OrderTotalPrice, Converter={StaticResource priceConverter}}"/>
                                        </StackPanel>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="{DynamicResource Customer}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel HorizontalAlignment="Center">
                                            <TextBlock Text="{Binding Customer.CustomerName}"/>
                                        </StackPanel>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="{DynamicResource Status}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel HorizontalAlignment="Center">
                                            <TextBlock Text="{Binding Complete, Converter={StaticResource orderStatusConverter}}"/>
                                        </StackPanel>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="{DynamicResource LastUpdate}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel HorizontalAlignment="Center">
                                            <TextBlock Text="{Binding OrderTime}"/>
                                        </StackPanel>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                        </DataGrid.Columns>
                    </DataGrid>
                </Border>
            </Border>

        </DockPanel>
    </Border>
</Page>
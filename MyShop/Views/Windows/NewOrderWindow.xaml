<Window x:Class="MyShop.Views.Windows.NewOrderWindow"
        xmlns:ctls="clr-namespace:MyShop.Views.Controls" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyShop.Views.Windows"
        mc:Ignorable="d" 

        xmlns:converters="clr-namespace:MyShop.Converters"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        Title="Add Product" Height="650" Width="1000"
        WindowStartupLocation="CenterScreen" WindowStyle="None"
        Loaded="Window_Loaded"
        Background="Transparent" AllowsTransparency="True"
        ResizeMode="NoResize" FontFamily="Poppins">
    <Window.Resources>
        <converters:GenderConverter x:Key="GenderConverter"/>
        <converters:PriceConverter x:Key="priceConverter"/>
        <converters:VisibilityCoverter x:Key="visibilityCoverter"/>
        <Style TargetType="DataGridColumnHeader" x:Key="ActiveCellStyle">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="15"/>

        </Style>
        <Style x:Key="MyDataGridRow" TargetType="DataGridRow">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
            <Setter Property="IsHitTestVisible" Value="True" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="IsSelected" Value="False" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Background" Value="{DynamicResource ThirdBackgroundColor}"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                    </MultiTrigger.Setters>
                </MultiTrigger>

            </Style.Triggers>
        </Style>
        <Style x:Key="MyDataGridCell" TargetType="DataGridCell"  BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>

            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>


    <Border Background="{DynamicResource PrimaryBackgroundColor}"
            CornerRadius="8">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="80"/>
                <RowDefinition Height="*" />
                <RowDefinition Height="70"/>
            </Grid.RowDefinitions>
            <TextBlock 
                    Text="{DynamicResource NewOrder}" FontSize="30" 
                    Margin="0 50 0 0"
                    Foreground="{DynamicResource PrimaryTextColor}" 
                    FontWeight="Bold"
                    VerticalAlignment="Center" HorizontalAlignment="Center"/>
            <!-- Start: Button Close | Restore | Minimize -->
            <StackPanel Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,10,0" Height="30" Orientation="Horizontal" FlowDirection="RightToLeft" Grid.RowSpan="2">
                <Button x:Name="btnClose" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}" Click="btnClose_Click" Tag="IsCloseButton"/>
                <Button x:Name="btnRestore" Margin="5,0" Click="btnRestore_Click">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IconButtonsStyle}">
                            <Setter Property="Content" Value="{DynamicResource maximize}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=home, Path=WindowState}" Value="Maximized">
                                    <Setter Property="Content" Value="{DynamicResource restore}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="btnMinimize" Style="{DynamicResource IconButtonsStyle}" Content="{DynamicResource minimize}" Click="btnMinimize_Click"/>
            </StackPanel>
            <Grid Grid.Row="1" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>
                <DockPanel Grid.Column="0" Margin="50 0 30 0">
                    <TextBlock 
                            DockPanel.Dock="Top"
                            Text="Customer" FontSize="20" 
                            Margin="0 0 0 20"
                            Foreground="{DynamicResource PrimaryTextColor}" 
                            FontWeight="Bold"
                            VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <Grid DockPanel.Dock="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5*"/>
                            <ColumnDefinition Width="4*"/>
                        </Grid.ColumnDefinitions>
                        <CheckBox
                            x:Name="newcustomer"
                            Grid.Column="0"
                            FontSize="16"
                            Foreground="{DynamicResource PrimaryTextColor}"
                            IsChecked="False"
                            Click="newcustomer_Click"
                            Content="{DynamicResource NewCustomer}"
                            Style="{StaticResource MaterialDesignCheckBox}" />
                        <Button 
                            Margin="20 0 0 0"
                            Name="SelectCustomer"
                            Click="SelectCustomer_Click"
                            Content="{DynamicResource Select}"
                            Grid.Column="1"
                            IsEnabled="{Binding SelectOldCustomer}">

                        </Button>

                    </Grid>
                    <StackPanel  DockPanel.Dock="Top">
                        <TextBox
                                FontSize="16"
                                Margin="0 10 0 10"
                                IsHitTestVisible="{Binding SelectOldCustomer, Converter={StaticResource InvertBooleanConverter}}"
                                IsReadOnly="{Binding SelectOldCustomer}"
                                Name="Name"
                                Text="{Binding Order.Customer.CustomerName}"
                                Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                BorderBrush="{DynamicResource PrimaryTextColor}"
                                Foreground="{DynamicResource PrimaryTextColor}"
                                VerticalAlignment="Top"
                                AcceptsReturn="True"
                                TextWrapping="Wrap"
                                VerticalScrollBarVisibility="Auto"
                                materialDesign:HintAssist.Hint="{DynamicResource Name}"
                                />

                        <ComboBox
                                SelectedItem="{Binding Order.Customer.Gender}"
                                FontSize="16"
                                Margin="0 10 0 10"
                                IsHitTestVisible="{Binding SelectOldCustomer, Converter={StaticResource InvertBooleanConverter}}" 
                                Name="GenderCombobox"
                                Background="{DynamicResource PrimaryBackgroundColor}"
                                BorderBrush="{DynamicResource PrimaryTextColor}"
                                Foreground="{DynamicResource PrimaryTextColor}"
                                Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                materialDesign:HintAssist.Hint="{DynamicResource Gender}"
                                materialDesign:TextFieldAssist.HasClearButton="True">

                            <ComboBox.ItemTemplate >
                                <DataTemplate >
                                    <TextBlock Text="{Binding GenderId, Converter={StaticResource GenderConverter}}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>

                        </ComboBox>
                        <TextBox
                                FontSize="16"
                                Margin="0 10 0 10"
                                IsHitTestVisible="{Binding SelectOldCustomer, Converter={StaticResource InvertBooleanConverter}}"
                                IsReadOnly="{Binding SelectOldCustomer}"
                                Name="Phone"
                                Text="{Binding Order.Customer.CustomerPhone}"
                                Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                BorderBrush="{DynamicResource PrimaryTextColor}"
                                Foreground="{DynamicResource PrimaryTextColor}"
                                VerticalAlignment="Top"
                                AcceptsReturn="True"
                                TextWrapping="Wrap"
                                VerticalScrollBarVisibility="Auto"
                                materialDesign:HintAssist.Hint="{DynamicResource PhoneNumber}"
                                />


                        <TextBox
                                FontSize="16"
                                Margin="0 10 0 10"
                                IsHitTestVisible="{Binding SelectOldCustomer, Converter={StaticResource InvertBooleanConverter}}"
                                IsReadOnly="{Binding SelectOldCustomer}"
                                Name="Email"
                                Text="{Binding Order.Customer.CustomerEmail}"
                                Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                BorderBrush="{DynamicResource PrimaryTextColor}"
                                Foreground="{DynamicResource PrimaryTextColor}"
                                VerticalAlignment="Top"
                                AcceptsReturn="True"
                                TextWrapping="Wrap"
                                VerticalScrollBarVisibility="Auto"
                                materialDesign:HintAssist.Hint="Email"
                                />
                        <TextBox
                                FontSize="16"
                                Margin="0 10 0 10"
                                IsReadOnly="{Binding SelectOldCustomer}"
                                Name="Address"
                                IsHitTestVisible="{Binding SelectOldCustomer, Converter={StaticResource InvertBooleanConverter}}"
                                Text="{Binding Order.Customer.CustomerAddress}"
                                Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                BorderBrush="{DynamicResource PrimaryTextColor}"
                                Foreground="{DynamicResource PrimaryTextColor}"
                                VerticalAlignment="Top"
                                Height="90"
                                AcceptsReturn="True"
                                TextWrapping="Wrap"
                                VerticalScrollBarVisibility="Auto"
                                materialDesign:HintAssist.Hint="{DynamicResource Address}"
                                />
                        <Button
                            Name="EditCustomer"
                            Click="EditCustomer_Click"
                            Margin="0 10 0 10"
                            Visibility="{Binding SelectOldCustomer, Converter={StaticResource visibilityCoverter}}"
                            Content="{DynamicResource Edit}"
                            Width="180">

                        </Button>

                    </StackPanel>

                </DockPanel>

                <Grid Grid.Column="1" Margin="10 0 50 10" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="70" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" >
                        <TextBlock 
                            HorizontalAlignment="Center"
                            Text="{DynamicResource Products}" FontSize="20" 
                            Margin="0 0 0 20"
                            Foreground="{DynamicResource PrimaryTextColor}" 
                            FontWeight="Bold"/>

                        <DataGrid
                            Margin="0 0 0 0"
                            Name="myTable"
                            CellStyle="{StaticResource MyDataGridCell}"
                            RowStyle="{StaticResource MyDataGridRow}"
                            Background="{DynamicResource SecundaryBackgroundColor}"
                            IsReadOnly ="True"
                            ColumnHeaderStyle="{StaticResource ActiveCellStyle}"
                            SelectionUnit="FullRow"
                            SelectionMode="Single"
                            ItemsSource="{Binding Products}"
                            CanUserSortColumns="True"
                            CanUserAddRows="False"
                            Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=ActualHeight}"
                            AutoGenerateColumns="False"
                            HeadersVisibility="All">

                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="{DynamicResource Product}"  Width="4*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel HorizontalAlignment="Center">
                                                <TextBlock Text="{Binding Product.ProductName}"/>
                                            </StackPanel>

                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="{DynamicResource Price}"  Width="3*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel HorizontalAlignment="Center">
                                                <TextBlock Text="{Binding ProductUnitPrice, Converter={StaticResource priceConverter}}"/>
                                            </StackPanel>

                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="{DynamicResource InStock}" Width="2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel HorizontalAlignment="Center">
                                                <TextBlock Text="{Binding Product.ProductQuantityInStock}"/>
                                            </StackPanel>

                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="{DynamicResource Quantity}" Width="3*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel HorizontalAlignment="Center">
                                                <StackPanel Orientation="Horizontal">
                                                    <Button Content="-" Padding="0" Height="15" Width="20" Margin="0 0 5 0" Name="Descrease" Click="Descrease_Click"/>
                                                    <TextBlock Text="{Binding Amount}"/>
                                                    <Button Content="+" Padding="0" Margin="5 0 0 0" Height="15" Width="20" Name="Increase" Click="Increase_Click"/>
                                                </StackPanel>

                                            </StackPanel>

                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>

                    </StackPanel>
                    <Canvas HorizontalAlignment="Right"
                        Margin="0 0 0 0"
                        VerticalAlignment="Bottom" >
                        <Button 
                        x:Name="addRowButton"
                        Click="addRowButton_Click"
                        Grid.Row="0"
                        Style="{StaticResource MaterialDesignFloatingActionButton}"
                        Margin="0 0 0 0" Canvas.Left="-46" Canvas.Top="-40" >
                            <materialDesign:PackIcon Kind="Plus" Width="24" Height="24"/>
                        </Button>
                    </Canvas>

                    <StackPanel Grid.Row="1"  VerticalAlignment="Bottom">
                        <Grid Margin="0 0 0 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="3*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0"  Content="{DynamicResource TypeOrder}" VerticalAlignment="Top" FontSize="18" />
                            <RadioButton
                                    Name="PayNow"
                                    Click="PayNow_Click"
                                    Margin="0 0 0 0"
                                    Grid.Column="2"
                                    IsChecked="True"
                                    HorizontalAlignment="Right"
                                    FontSize="18"   
                                    Foreground="{DynamicResource PrimaryTextColor}"
                                    Style="{StaticResource MaterialDesignUserForegroundRadioButton}"
                                    Content="{DynamicResource PayNow}" />
                            <RadioButton
                                    Click="PreOrder_Click"
                                    Name="PreOrder"
                                    Grid.Column="3"
                                    HorizontalAlignment="Right"
                                    Foreground="{DynamicResource PrimaryTextColor}"
                                    FontSize="18"   
                                    Style="{StaticResource MaterialDesignUserForegroundRadioButton}"
                                    Content="{DynamicResource PreOrder}" />

                        </Grid>



                    </StackPanel>

                </Grid>

            </Grid>
            <!-- End: Button Close | Restore | Minimize -->
            <DockPanel 
                Margin="50 0 0 0"
                Grid.Row="3" 
                VerticalAlignment="Center">
                <StackPanel  
                    DockPanel.Dock="Left"
                    Orientation="Horizontal"  
                    HorizontalAlignment="Left" 
                    Margin="0,5,10,0" Height="30" 
                    FlowDirection="LeftToRight" >
                    <TextBlock 
                            Text="{DynamicResource TotalPrice}" FontSize="30" 
                            Foreground="{DynamicResource PrimaryTextColor}" 
                            FontWeight="Bold"
                            VerticalAlignment="Center" />
                    <TextBlock 
                            Margin="5 0 0 0"
                            Text="{Binding Order.OrderTotalPrice, Converter={StaticResource priceConverter}}" FontSize="30" 
                            Foreground="{DynamicResource PrimaryTextColor}" 
                            FontWeight="Bold"
                            VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel  
                    DockPanel.Dock="Right"
                    Orientation="Horizontal"  
                    HorizontalAlignment="Right" 
                    Margin="0,5,50,0" Height="30" 
                    FlowDirection="LeftToRight" >
                    <Button 
                            Name="Ok"
                            Click="Ok_Click"
                            Content="Ok" IsDefault="True"
                            Width="90"
                            />
                    <Button 
                            Content="{DynamicResource Cancel}" IsCancel="True"
                            Width="90"
                            Margin="20 0 0 0"
                            />
                </StackPanel>
            </DockPanel>

        </Grid>
    </Border>
</Window>